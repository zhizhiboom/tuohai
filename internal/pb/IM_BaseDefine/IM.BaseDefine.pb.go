// Code generated by protoc-gen-go.
// source: tuohai/internal/pb/IM_BaseDefine/IM.BaseDefine.proto
// DO NOT EDIT!

/*
Package IM_BaseDefine is a generated protocol buffer package.

It is generated from these files:
	tuohai/internal/pb/IM_BaseDefine/IM.BaseDefine.proto

It has these top-level messages:
	IMGroupChangeMemberNotify
*/
package IM_BaseDefine

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// service id
type ServiceID int32

const (
	ServiceID_SID_UNUSED         ServiceID = 0
	ServiceID_SID_LOGIN          ServiceID = 1
	ServiceID_SID_MSG            ServiceID = 3
	ServiceID_SID_GROUP          ServiceID = 4
	ServiceID_SID_SWITCH_SERVICE ServiceID = 6
	ServiceID_SID_OTHER          ServiceID = 7
	ServiceID_SID_INTERNAL       ServiceID = 8
)

var ServiceID_name = map[int32]string{
	0: "SID_UNUSED",
	1: "SID_LOGIN",
	3: "SID_MSG",
	4: "SID_GROUP",
	6: "SID_SWITCH_SERVICE",
	7: "SID_OTHER",
	8: "SID_INTERNAL",
}
var ServiceID_value = map[string]int32{
	"SID_UNUSED":         0,
	"SID_LOGIN":          1,
	"SID_MSG":            3,
	"SID_GROUP":          4,
	"SID_SWITCH_SERVICE": 6,
	"SID_OTHER":          7,
	"SID_INTERNAL":       8,
}

func (x ServiceID) String() string {
	return proto.EnumName(ServiceID_name, int32(x))
}
func (ServiceID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// command id for login
type LoginCmdID int32

const (
	LoginCmdID_CID_LOGIN_UNUSED         LoginCmdID = 0
	LoginCmdID_CID_LOGIN_REQ_USERLOGIN  LoginCmdID = 259
	LoginCmdID_CID_LOGIN_RES_USERLOGIN  LoginCmdID = 260
	LoginCmdID_CID_LOGIN_REQ_USERLOGOUT LoginCmdID = 261
	LoginCmdID_CID_LOGIN_RES_USERLOGOUT LoginCmdID = 262
	LoginCmdID_CID_LOGIN_REQ_KICKCLIENT LoginCmdID = 266
	LoginCmdID_CID_LOGIN_RES_KICKCLIENT LoginCmdID = 267
)

var LoginCmdID_name = map[int32]string{
	0:   "CID_LOGIN_UNUSED",
	259: "CID_LOGIN_REQ_USERLOGIN",
	260: "CID_LOGIN_RES_USERLOGIN",
	261: "CID_LOGIN_REQ_USERLOGOUT",
	262: "CID_LOGIN_RES_USERLOGOUT",
	266: "CID_LOGIN_REQ_KICKCLIENT",
	267: "CID_LOGIN_RES_KICKCLIENT",
}
var LoginCmdID_value = map[string]int32{
	"CID_LOGIN_UNUSED":         0,
	"CID_LOGIN_REQ_USERLOGIN":  259,
	"CID_LOGIN_RES_USERLOGIN":  260,
	"CID_LOGIN_REQ_USERLOGOUT": 261,
	"CID_LOGIN_RES_USERLOGOUT": 262,
	"CID_LOGIN_REQ_KICKCLIENT": 266,
	"CID_LOGIN_RES_KICKCLIENT": 267,
}

func (x LoginCmdID) String() string {
	return proto.EnumName(LoginCmdID_name, int32(x))
}
func (LoginCmdID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// command id for msg
type MessageCmdID int32

const (
	MessageCmdID_CID_MSG_UNUSED              MessageCmdID = 0
	MessageCmdID_CID_MSG_DATA                MessageCmdID = 769
	MessageCmdID_CID_MSG_DATA_ACK            MessageCmdID = 770
	MessageCmdID_CID_MSG_READ_ACK            MessageCmdID = 771
	MessageCmdID_CID_MSG_READ_NOTIFY         MessageCmdID = 772
	MessageCmdID_CID_MSG_UNREAD_CNT_REQUEST  MessageCmdID = 775
	MessageCmdID_CID_MSG_UNREAD_CNT_RESPONSE MessageCmdID = 776
)

var MessageCmdID_name = map[int32]string{
	0:   "CID_MSG_UNUSED",
	769: "CID_MSG_DATA",
	770: "CID_MSG_DATA_ACK",
	771: "CID_MSG_READ_ACK",
	772: "CID_MSG_READ_NOTIFY",
	775: "CID_MSG_UNREAD_CNT_REQUEST",
	776: "CID_MSG_UNREAD_CNT_RESPONSE",
}
var MessageCmdID_value = map[string]int32{
	"CID_MSG_UNUSED":              0,
	"CID_MSG_DATA":                769,
	"CID_MSG_DATA_ACK":            770,
	"CID_MSG_READ_ACK":            771,
	"CID_MSG_READ_NOTIFY":         772,
	"CID_MSG_UNREAD_CNT_REQUEST":  775,
	"CID_MSG_UNREAD_CNT_RESPONSE": 776,
}

func (x MessageCmdID) String() string {
	return proto.EnumName(MessageCmdID_name, int32(x))
}
func (MessageCmdID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type IMGroup int32

const (
	IMGroup_CIM_GROUP_UNUSED IMGroup = 0
	IMGroup_CID_GROUP_CHANGE IMGroup = 1035
)

var IMGroup_name = map[int32]string{
	0:    "CIM_GROUP_UNUSED",
	1035: "CID_GROUP_CHANGE",
}
var IMGroup_value = map[string]int32{
	"CIM_GROUP_UNUSED": 0,
	"CID_GROUP_CHANGE": 1035,
}

func (x IMGroup) String() string {
	return proto.EnumName(IMGroup_name, int32(x))
}
func (IMGroup) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GroupModifyType int32

const (
	GroupModifyType_GROUP_MODIFY_TYPE_UNUSED            GroupModifyType = 0
	GroupModifyType_GROUP_MODIFY_TYPE_ADD               GroupModifyType = 1
	GroupModifyType_GROUP_MODIFY_TYPE_DEL               GroupModifyType = 2
	GroupModifyType_GROUP_MODIFY_TYPE_ADD_ADMIN         GroupModifyType = 3
	GroupModifyType_GROUP_MODIFY_TYPE_DEL_ADMIN         GroupModifyType = 4
	GroupModifyType_GROUP_MODIFY_TYPE_DISMISS           GroupModifyType = 5
	GroupModifyType_GROUP_MODIFY_TYPE_CHANGE_GROUP_NAME GroupModifyType = 6
)

var GroupModifyType_name = map[int32]string{
	0: "GROUP_MODIFY_TYPE_UNUSED",
	1: "GROUP_MODIFY_TYPE_ADD",
	2: "GROUP_MODIFY_TYPE_DEL",
	3: "GROUP_MODIFY_TYPE_ADD_ADMIN",
	4: "GROUP_MODIFY_TYPE_DEL_ADMIN",
	5: "GROUP_MODIFY_TYPE_DISMISS",
	6: "GROUP_MODIFY_TYPE_CHANGE_GROUP_NAME",
}
var GroupModifyType_value = map[string]int32{
	"GROUP_MODIFY_TYPE_UNUSED":            0,
	"GROUP_MODIFY_TYPE_ADD":               1,
	"GROUP_MODIFY_TYPE_DEL":               2,
	"GROUP_MODIFY_TYPE_ADD_ADMIN":         3,
	"GROUP_MODIFY_TYPE_DEL_ADMIN":         4,
	"GROUP_MODIFY_TYPE_DISMISS":           5,
	"GROUP_MODIFY_TYPE_CHANGE_GROUP_NAME": 6,
}

func (x GroupModifyType) String() string {
	return proto.EnumName(GroupModifyType_name, int32(x))
}
func (GroupModifyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

// command id for switch service
type SwitchServiceCmdID int32

const (
	SwitchServiceCmdID_CID_SWITCH_UNUSED  SwitchServiceCmdID = 0
	SwitchServiceCmdID_CID_SWITCH_P2P_CMD SwitchServiceCmdID = 1537
)

var SwitchServiceCmdID_name = map[int32]string{
	0:    "CID_SWITCH_UNUSED",
	1537: "CID_SWITCH_P2P_CMD",
}
var SwitchServiceCmdID_value = map[string]int32{
	"CID_SWITCH_UNUSED":  0,
	"CID_SWITCH_P2P_CMD": 1537,
}

func (x SwitchServiceCmdID) String() string {
	return proto.EnumName(SwitchServiceCmdID_name, int32(x))
}
func (SwitchServiceCmdID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type OtherCmdID int32

const (
	OtherCmdID_CID_OTHER_UNUSED           OtherCmdID = 0
	OtherCmdID_CID_OTHER_HEARTBEAT        OtherCmdID = 1793
	OtherCmdID_CID_OTHER_STOP_RECV_PACKET OtherCmdID = 1794
)

var OtherCmdID_name = map[int32]string{
	0:    "CID_OTHER_UNUSED",
	1793: "CID_OTHER_HEARTBEAT",
	1794: "CID_OTHER_STOP_RECV_PACKET",
}
var OtherCmdID_value = map[string]int32{
	"CID_OTHER_UNUSED":           0,
	"CID_OTHER_HEARTBEAT":        1793,
	"CID_OTHER_STOP_RECV_PACKET": 1794,
}

func (x OtherCmdID) String() string {
	return proto.EnumName(OtherCmdID_name, int32(x))
}
func (OtherCmdID) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type ResultType int32

const (
	ResultType_Ok      ResultType = 0
	ResultType_REFUSED ResultType = 1
)

var ResultType_name = map[int32]string{
	0: "Ok",
	1: "REFUSED",
}
var ResultType_value = map[string]int32{
	"Ok":      0,
	"REFUSED": 1,
}

func (x ResultType) String() string {
	return proto.EnumName(ResultType_name, int32(x))
}
func (ResultType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type UserStatType int32

const (
	UserStatType_USER_STATUS_UNKNOWN UserStatType = 0
	UserStatType_USER_STATUS_ONLINE  UserStatType = 1
	UserStatType_USER_STATUS_OFFLINE UserStatType = 2
	UserStatType_USER_STATUS_LEAVE   UserStatType = 3
	UserStatType_USER_STATUS_HIDDEN  UserStatType = 4
	UserStatType_USER_STATUS_BUSY    UserStatType = 5
)

var UserStatType_name = map[int32]string{
	0: "USER_STATUS_UNKNOWN",
	1: "USER_STATUS_ONLINE",
	2: "USER_STATUS_OFFLINE",
	3: "USER_STATUS_LEAVE",
	4: "USER_STATUS_HIDDEN",
	5: "USER_STATUS_BUSY",
}
var UserStatType_value = map[string]int32{
	"USER_STATUS_UNKNOWN": 0,
	"USER_STATUS_ONLINE":  1,
	"USER_STATUS_OFFLINE": 2,
	"USER_STATUS_LEAVE":   3,
	"USER_STATUS_HIDDEN":  4,
	"USER_STATUS_BUSY":    5,
}

func (x UserStatType) String() string {
	return proto.EnumName(UserStatType_name, int32(x))
}
func (UserStatType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type SessionType int32

const (
	SessionType_SESSION_TYPE_OTHER     SessionType = 0
	SessionType_SESSION_TYPE_SINGLE    SessionType = 1
	SessionType_SESSION_TYPE_GROUP     SessionType = 2
	SessionType_SESSION_TYPE_SNGLE_TMP SessionType = 3
	SessionType_SESSION_TYPE_GROUP_TMP SessionType = 4
)

var SessionType_name = map[int32]string{
	0: "SESSION_TYPE_OTHER",
	1: "SESSION_TYPE_SINGLE",
	2: "SESSION_TYPE_GROUP",
	3: "SESSION_TYPE_SNGLE_TMP",
	4: "SESSION_TYPE_GROUP_TMP",
}
var SessionType_value = map[string]int32{
	"SESSION_TYPE_OTHER":     0,
	"SESSION_TYPE_SINGLE":    1,
	"SESSION_TYPE_GROUP":     2,
	"SESSION_TYPE_SNGLE_TMP": 3,
	"SESSION_TYPE_GROUP_TMP": 4,
}

func (x SessionType) String() string {
	return proto.EnumName(SessionType_name, int32(x))
}
func (SessionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type MsgType int32

const (
	MsgType_MSG_TYPE_RESERVE6     MsgType = 0
	MsgType_MSG_TYPE_SINGLE_TEXT  MsgType = 1
	MsgType_MSG_TYPE_SINGLE_AUDIO MsgType = 2
	MsgType_MSG_TYPE_PUSH_MESSAGE MsgType = 3
	MsgType_MSG_TYPE_RESERVE0     MsgType = 4
	MsgType_MSG_TYPE_RESERVE1     MsgType = 5
	MsgType_MSG_TYPE_RESERVE2     MsgType = 6
	MsgType_MSG_TYPE_RESERVE3     MsgType = 7
	MsgType_MSG_TYPE_RESERVE4     MsgType = 8
	MsgType_MSG_TYPE_RESERVE5     MsgType = 9
	MsgType_MSG_TYPE_GROUP_TEXT   MsgType = 17
	MsgType_MSG_TYPE_GROUP_AUDIO  MsgType = 18
)

var MsgType_name = map[int32]string{
	0:  "MSG_TYPE_RESERVE6",
	1:  "MSG_TYPE_SINGLE_TEXT",
	2:  "MSG_TYPE_SINGLE_AUDIO",
	3:  "MSG_TYPE_PUSH_MESSAGE",
	4:  "MSG_TYPE_RESERVE0",
	5:  "MSG_TYPE_RESERVE1",
	6:  "MSG_TYPE_RESERVE2",
	7:  "MSG_TYPE_RESERVE3",
	8:  "MSG_TYPE_RESERVE4",
	9:  "MSG_TYPE_RESERVE5",
	17: "MSG_TYPE_GROUP_TEXT",
	18: "MSG_TYPE_GROUP_AUDIO",
}
var MsgType_value = map[string]int32{
	"MSG_TYPE_RESERVE6":     0,
	"MSG_TYPE_SINGLE_TEXT":  1,
	"MSG_TYPE_SINGLE_AUDIO": 2,
	"MSG_TYPE_PUSH_MESSAGE": 3,
	"MSG_TYPE_RESERVE0":     4,
	"MSG_TYPE_RESERVE1":     5,
	"MSG_TYPE_RESERVE2":     6,
	"MSG_TYPE_RESERVE3":     7,
	"MSG_TYPE_RESERVE4":     8,
	"MSG_TYPE_RESERVE5":     9,
	"MSG_TYPE_GROUP_TEXT":   17,
	"MSG_TYPE_GROUP_AUDIO":  18,
}

func (x MsgType) String() string {
	return proto.EnumName(MsgType_name, int32(x))
}
func (MsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

type ClientType int32

const (
	ClientType_CLIENT_TYPE_UNKNOWN ClientType = 0
	ClientType_CLIENT_TYPE_WINDOWS ClientType = 1
	ClientType_CLIENT_TYPE_MAC     ClientType = 2
	ClientType_CLIENT_TYPE_WEBIM   ClientType = 3
	ClientType_CLIENT_TYPE_IOS     ClientType = 17
	ClientType_CLIENT_TYPE_ANDROID ClientType = 18
)

var ClientType_name = map[int32]string{
	0:  "CLIENT_TYPE_UNKNOWN",
	1:  "CLIENT_TYPE_WINDOWS",
	2:  "CLIENT_TYPE_MAC",
	3:  "CLIENT_TYPE_WEBIM",
	17: "CLIENT_TYPE_IOS",
	18: "CLIENT_TYPE_ANDROID",
}
var ClientType_value = map[string]int32{
	"CLIENT_TYPE_UNKNOWN": 0,
	"CLIENT_TYPE_WINDOWS": 1,
	"CLIENT_TYPE_MAC":     2,
	"CLIENT_TYPE_WEBIM":   3,
	"CLIENT_TYPE_IOS":     17,
	"CLIENT_TYPE_ANDROID": 18,
}

func (x ClientType) String() string {
	return proto.EnumName(ClientType_name, int32(x))
}
func (ClientType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

type GroupType int32

const (
	GroupType_GROUP_TYPE_ALL     GroupType = 0
	GroupType_GROUP_TYPE_NORMAL  GroupType = 1
	GroupType_GROUP_TYPE_TMP     GroupType = 2
	GroupType_GROUP_TYPE_PROJECT GroupType = 3
)

var GroupType_name = map[int32]string{
	0: "GROUP_TYPE_ALL",
	1: "GROUP_TYPE_NORMAL",
	2: "GROUP_TYPE_TMP",
	3: "GROUP_TYPE_PROJECT",
}
var GroupType_value = map[string]int32{
	"GROUP_TYPE_ALL":     0,
	"GROUP_TYPE_NORMAL":  1,
	"GROUP_TYPE_TMP":     2,
	"GROUP_TYPE_PROJECT": 3,
}

func (x GroupType) String() string {
	return proto.EnumName(GroupType_name, int32(x))
}
func (GroupType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type GroupRole int32

const (
	GroupRole_GROUP_ROLE_NORMAL  GroupRole = 0
	GroupRole_GROUP_ROLE_ADMIN   GroupRole = 1
	GroupRole_GROUP_ROLE_CREATOR GroupRole = 2
)

var GroupRole_name = map[int32]string{
	0: "GROUP_ROLE_NORMAL",
	1: "GROUP_ROLE_ADMIN",
	2: "GROUP_ROLE_CREATOR",
}
var GroupRole_value = map[string]int32{
	"GROUP_ROLE_NORMAL":  0,
	"GROUP_ROLE_ADMIN":   1,
	"GROUP_ROLE_CREATOR": 2,
}

func (x GroupRole) String() string {
	return proto.EnumName(GroupRole_name, int32(x))
}
func (GroupRole) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type IMGroupChangeMemberNotify struct {
	// cmd id:       0x040b
	UserId        string          `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ChangeType    GroupModifyType `protobuf:"varint,2,opt,name=change_type,json=changeType,enum=IM.BaseDefine.GroupModifyType" json:"change_type,omitempty"`
	GroupId       string          `protobuf:"bytes,3,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
	CurUserIdList []string        `protobuf:"bytes,4,rep,name=cur_user_id_list,json=curUserIdList" json:"cur_user_id_list,omitempty"`
	ChgUserIdList []string        `protobuf:"bytes,5,rep,name=chg_user_id_list,json=chgUserIdList" json:"chg_user_id_list,omitempty"`
	RcvId         string          `protobuf:"bytes,6,opt,name=rcv_id,json=rcvId" json:"rcv_id,omitempty"`
}

func (m *IMGroupChangeMemberNotify) Reset()                    { *m = IMGroupChangeMemberNotify{} }
func (m *IMGroupChangeMemberNotify) String() string            { return proto.CompactTextString(m) }
func (*IMGroupChangeMemberNotify) ProtoMessage()               {}
func (*IMGroupChangeMemberNotify) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func init() {
	proto.RegisterType((*IMGroupChangeMemberNotify)(nil), "IM.BaseDefine.IMGroupChangeMemberNotify")
	proto.RegisterEnum("IM.BaseDefine.ServiceID", ServiceID_name, ServiceID_value)
	proto.RegisterEnum("IM.BaseDefine.LoginCmdID", LoginCmdID_name, LoginCmdID_value)
	proto.RegisterEnum("IM.BaseDefine.MessageCmdID", MessageCmdID_name, MessageCmdID_value)
	proto.RegisterEnum("IM.BaseDefine.IMGroup", IMGroup_name, IMGroup_value)
	proto.RegisterEnum("IM.BaseDefine.GroupModifyType", GroupModifyType_name, GroupModifyType_value)
	proto.RegisterEnum("IM.BaseDefine.SwitchServiceCmdID", SwitchServiceCmdID_name, SwitchServiceCmdID_value)
	proto.RegisterEnum("IM.BaseDefine.OtherCmdID", OtherCmdID_name, OtherCmdID_value)
	proto.RegisterEnum("IM.BaseDefine.ResultType", ResultType_name, ResultType_value)
	proto.RegisterEnum("IM.BaseDefine.UserStatType", UserStatType_name, UserStatType_value)
	proto.RegisterEnum("IM.BaseDefine.SessionType", SessionType_name, SessionType_value)
	proto.RegisterEnum("IM.BaseDefine.MsgType", MsgType_name, MsgType_value)
	proto.RegisterEnum("IM.BaseDefine.ClientType", ClientType_name, ClientType_value)
	proto.RegisterEnum("IM.BaseDefine.GroupType", GroupType_name, GroupType_value)
	proto.RegisterEnum("IM.BaseDefine.GroupRole", GroupRole_name, GroupRole_value)
}

func init() {
	proto.RegisterFile("tuohai/internal/pb/IM_BaseDefine/IM.BaseDefine.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1084 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x56, 0xcb, 0x6e, 0xdb, 0x46,
	0x14, 0x8d, 0x28, 0x9b, 0xb2, 0x27, 0xb6, 0x33, 0xa6, 0xe3, 0x58, 0x4e, 0xfa, 0x70, 0xdb, 0x45,
	0x0b, 0x02, 0x75, 0x5a, 0xa7, 0xcd, 0xb6, 0xa0, 0xc9, 0xb1, 0x34, 0x35, 0x39, 0xa3, 0x72, 0x46,
	0x76, 0xbd, 0x28, 0x08, 0x3f, 0x18, 0x59, 0xa8, 0x23, 0x19, 0x92, 0x9c, 0x22, 0xab, 0xc2, 0x49,
	0xfa, 0x40, 0x03, 0x74, 0xdd, 0x4d, 0x3f, 0xa1, 0xff, 0xd0, 0xef, 0xe8, 0x4f, 0x74, 0xdd, 0x5d,
	0xef, 0xcc, 0x50, 0x26, 0x45, 0x73, 0x21, 0x40, 0x73, 0xce, 0xb9, 0x77, 0xee, 0x9d, 0xfb, 0x90,
	0xd0, 0xa7, 0xfd, 0xc1, 0x24, 0x1d, 0x0d, 0x8e, 0x2f, 0x1e, 0x5f, 0x9e, 0x3c, 0xa6, 0x51, 0xb2,
	0x7b, 0x3c, 0x4e, 0x83, 0xf4, 0x59, 0x7f, 0x90, 0xc2, 0x69, 0x3b, 0x3f, 0x6d, 0x5f, 0x8e, 0x86,
	0x93, 0xa1, 0xb3, 0x3c, 0x03, 0x7e, 0xf8, 0x5f, 0x0d, 0x6d, 0xd2, 0xa8, 0x35, 0x1a, 0x5e, 0x5d,
	0xfa, 0xe7, 0xc7, 0x83, 0x5e, 0x1a, 0xa5, 0xcf, 0x4f, 0xd2, 0x11, 0x1b, 0x4e, 0xfa, 0xcf, 0x5e,
	0x3a, 0x1b, 0xa8, 0x71, 0x35, 0x4e, 0x47, 0x49, 0xff, 0xac, 0x59, 0xdb, 0xaa, 0x7d, 0xb2, 0x18,
	0xdb, 0xea, 0x48, 0xcf, 0x9c, 0xaf, 0xd0, 0xdd, 0x53, 0x2d, 0x4f, 0x26, 0x2f, 0x2f, 0xd3, 0xa6,
	0x05, 0xe4, 0xca, 0xce, 0x7b, 0xdb, 0xb3, 0x17, 0x6a, 0xaf, 0xd1, 0xf0, 0x0c, 0x3c, 0x49, 0x50,
	0xc5, 0xc8, 0x98, 0xa8, 0xef, 0xce, 0x26, 0x5a, 0xe8, 0x29, 0x5a, 0xb9, 0xae, 0x6b, 0xd7, 0x0d,
	0x7d, 0x06, 0xdf, 0x1f, 0x23, 0x7c, 0x7a, 0x35, 0x4a, 0xb2, 0x8b, 0x93, 0x8b, 0xfe, 0x78, 0xd2,
	0x9c, 0xdb, 0xaa, 0x83, 0x64, 0x19, 0xf0, 0xae, 0x0e, 0x20, 0x04, 0x50, 0x0b, 0xcf, 0x7b, 0xb3,
	0xc2, 0xf9, 0x4c, 0x78, 0xde, 0x2b, 0x08, 0xd7, 0x91, 0x3d, 0x3a, 0x7d, 0xa1, 0xae, 0xb2, 0xf5,
	0x55, 0xf3, 0x70, 0xa2, 0x67, 0xee, 0x8f, 0x68, 0x51, 0xa4, 0xa3, 0x17, 0xfd, 0xd3, 0x94, 0x06,
	0xce, 0x0a, 0x42, 0x82, 0x06, 0x49, 0x97, 0x75, 0x05, 0x09, 0xf0, 0x1d, 0x67, 0x19, 0x48, 0x38,
	0x87, 0xbc, 0x45, 0x19, 0xae, 0x39, 0x77, 0x51, 0x43, 0x1d, 0x23, 0xd1, 0xc2, 0xf5, 0x29, 0xd7,
	0x8a, 0x79, 0xb7, 0x83, 0xe7, 0x9c, 0x07, 0xc8, 0x51, 0x47, 0x71, 0x48, 0xa5, 0xdf, 0x4e, 0x04,
	0x89, 0x0f, 0xa8, 0x4f, 0xb0, 0x3d, 0x95, 0x71, 0xd9, 0x26, 0x31, 0x6e, 0x38, 0x18, 0x2d, 0xa9,
	0x23, 0x65, 0x92, 0xc4, 0xcc, 0x0b, 0xf1, 0x82, 0xfb, 0x4f, 0x0d, 0xa1, 0x70, 0xd8, 0xeb, 0x0f,
	0xfc, 0xe7, 0x67, 0x10, 0xc2, 0x7d, 0x84, 0xfd, 0xe9, 0x95, 0x79, 0x20, 0xef, 0xa0, 0x8d, 0x1c,
	0x8d, 0xc9, 0x37, 0x09, 0xe0, 0xb1, 0x09, 0xeb, 0xb5, 0x55, 0x66, 0x45, 0x81, 0x7d, 0x63, 0x39,
	0xef, 0xa2, 0x66, 0xa5, 0x2d, 0xef, 0x4a, 0xfc, 0xd3, 0x2d, 0x5a, 0x14, 0xe9, 0x9f, 0x2b, 0xac,
	0xf7, 0xa9, 0xbf, 0xef, 0x87, 0x94, 0x30, 0x89, 0x7f, 0xab, 0xb0, 0x2e, 0xd0, 0x6f, 0x2d, 0xf7,
	0xef, 0x1a, 0x5a, 0x8a, 0xd2, 0xf1, 0xf8, 0xb8, 0x97, 0x9a, 0xf4, 0x1c, 0xb4, 0xe2, 0x9b, 0x27,
	0xcc, 0x93, 0x5b, 0x45, 0x4b, 0x53, 0x2c, 0xf0, 0xa4, 0x87, 0xaf, 0x6d, 0x28, 0x16, 0x2e, 0x42,
	0x89, 0xe7, 0xef, 0xe3, 0x57, 0x33, 0x70, 0x4c, 0xbc, 0x40, 0xc3, 0xaf, 0x6d, 0xa7, 0x89, 0xd6,
	0x66, 0x60, 0xc6, 0x25, 0xdd, 0x3b, 0xc2, 0x6f, 0x6c, 0xe7, 0x7d, 0xf4, 0x30, 0xbf, 0x4e, 0x73,
	0x3e, 0x93, 0x2a, 0x8d, 0x2e, 0x11, 0x12, 0xff, 0x62, 0x3b, 0x5b, 0xe8, 0x51, 0xa5, 0x40, 0x74,
	0x38, 0x13, 0x04, 0xff, 0x6a, 0xbb, 0x4f, 0x51, 0x23, 0x9b, 0x0d, 0x53, 0x9b, 0xc8, 0x94, 0x3c,
	0x0f, 0x3f, 0x0b, 0xca, 0xa0, 0x7e, 0xdb, 0x63, 0x2d, 0x82, 0xdf, 0x2e, 0xb8, 0xff, 0xd6, 0xd0,
	0xbd, 0x52, 0xf3, 0x43, 0xa1, 0x9a, 0x46, 0x16, 0xf1, 0x00, 0x22, 0x4c, 0xe4, 0x51, 0x87, 0xe4,
	0x8e, 0x36, 0xd1, 0xfa, 0x6d, 0xd6, 0x0b, 0x02, 0xe8, 0xbc, 0x4a, 0x2a, 0x20, 0x21, 0xb6, 0x20,
	0xc5, 0x47, 0x95, 0x56, 0xf0, 0x89, 0xa0, 0x01, 0xea, 0xd5, 0x02, 0xb0, 0xcd, 0x04, 0x73, 0x50,
	0xc3, 0xcd, 0x0a, 0x01, 0x15, 0x11, 0x15, 0x02, 0xcf, 0xc3, 0x84, 0x7d, 0x74, 0x9b, 0x36, 0x79,
	0x66, 0x49, 0x33, 0x2f, 0x82, 0x56, 0x77, 0x03, 0x18, 0x81, 0x1f, 0xfa, 0x93, 0xd3, 0xf3, 0x6c,
	0xa0, 0x4c, 0xc5, 0xd7, 0xd1, 0xaa, 0x9f, 0x0f, 0xc6, 0x4d, 0xb2, 0x1b, 0xc8, 0x29, 0xc0, 0x9d,
	0x1d, 0x78, 0xba, 0x28, 0xc0, 0xd7, 0x4b, 0xee, 0x77, 0x08, 0xf1, 0xc9, 0x79, 0x3a, 0x9a, 0x19,
	0x07, 0x3d, 0x3e, 0xb9, 0x71, 0x56, 0x70, 0x83, 0xb6, 0x89, 0x17, 0xcb, 0x5d, 0xe2, 0x49, 0x7c,
	0xbd, 0x32, 0x2d, 0xb8, 0x61, 0x84, 0xe4, 0x1d, 0xa8, 0xa5, 0x7f, 0x90, 0x74, 0xa0, 0x53, 0x88,
	0xc4, 0xaf, 0x56, 0xdc, 0x0f, 0x10, 0x8a, 0xd3, 0xf1, 0xd5, 0xc5, 0x44, 0x17, 0xc4, 0x46, 0x16,
	0xff, 0x1e, 0x1c, 0xc2, 0x64, 0xc7, 0x64, 0x4f, 0x7b, 0xaf, 0xb9, 0x7f, 0x42, 0xd3, 0xaa, 0xc5,
	0x21, 0x26, 0xc7, 0x46, 0xb5, 0x81, 0xd6, 0xd4, 0x50, 0x80, 0x3f, 0x4f, 0x76, 0x61, 0x40, 0xd8,
	0x3e, 0xe3, 0x87, 0x0c, 0xcc, 0x60, 0xe8, 0x8b, 0x04, 0x67, 0x21, 0x65, 0x04, 0xca, 0x55, 0x32,
	0xe0, 0x7b, 0x7b, 0x9a, 0xb0, 0xd4, 0x63, 0x14, 0x89, 0x90, 0x78, 0x07, 0x04, 0x4a, 0x54, 0xf2,
	0xd3, 0xa6, 0x41, 0x40, 0x54, 0x65, 0x20, 0xfb, 0x22, 0xbe, 0xdb, 0x15, 0x47, 0x78, 0xde, 0xfd,
	0xbd, 0x86, 0xee, 0x0a, 0x18, 0xaa, 0xfe, 0x70, 0xa0, 0xc3, 0x53, 0xab, 0x87, 0x08, 0x41, 0x39,
	0x33, 0xb5, 0x31, 0xbb, 0x46, 0x3d, 0xf1, 0xda, 0x0c, 0x2e, 0x28, 0x6b, 0x85, 0x2a, 0xbc, 0xb2,
	0x81, 0xd9, 0x61, 0x96, 0xf3, 0x10, 0x3d, 0x98, 0x35, 0x50, 0xfa, 0x44, 0x46, 0x1d, 0x08, 0xb1,
	0xcc, 0x99, 0xca, 0x2b, 0x6e, 0xce, 0xfd, 0xcb, 0x42, 0x8d, 0x68, 0xdc, 0xd3, 0xc1, 0x40, 0x86,
	0x6a, 0x98, 0xb4, 0x06, 0xc6, 0x08, 0xf6, 0x20, 0x79, 0xaa, 0x2b, 0x76, 0xff, 0x06, 0x36, 0x71,
	0x24, 0x92, 0x7c, 0x2b, 0x4d, 0x6b, 0x97, 0x19, 0xaf, 0x1b, 0x50, 0x0e, 0xf1, 0x14, 0xa9, 0x4e,
	0x57, 0xb4, 0x93, 0x08, 0x22, 0xf0, 0x5a, 0xea, 0xc5, 0x2a, 0xae, 0xf9, 0x0c, 0x1e, 0xac, 0x02,
	0xfe, 0x1c, 0x5a, 0xb8, 0x02, 0xde, 0xc1, 0x76, 0x15, 0xfc, 0x04, 0x76, 0x74, 0x05, 0xfc, 0x05,
	0x5e, 0xa8, 0x82, 0xbf, 0xc4, 0x8b, 0xea, 0x95, 0x6f, 0xe0, 0xec, 0x51, 0x54, 0x62, 0xab, 0x33,
	0x29, 0x1b, 0xc2, 0xe4, 0xe5, 0xb8, 0x7f, 0xc0, 0xca, 0xf7, 0x2f, 0xfa, 0xe9, 0xe0, 0xa6, 0xbd,
	0xcc, 0xc6, 0x9c, 0xee, 0x83, 0x69, 0x7b, 0x95, 0x88, 0x43, 0xca, 0x02, 0x7e, 0x28, 0xe0, 0xcd,
	0xd6, 0xd0, 0xbd, 0x22, 0x11, 0x79, 0xbe, 0xe9, 0xad, 0x19, 0x35, 0xd9, 0xa5, 0x11, 0xbc, 0x54,
	0x49, 0x4b, 0xb9, 0x80, 0xd8, 0x4a, 0x9e, 0x3d, 0x16, 0xc4, 0x9c, 0x06, 0x10, 0xda, 0x09, 0x5a,
	0xd4, 0x4b, 0x4b, 0x07, 0x06, 0xcb, 0x3a, 0xcb, 0x48, 0x8b, 0xc2, 0x50, 0x6f, 0xbb, 0xd5, 0x02,
	0xc6, 0x78, 0x1c, 0xc1, 0xaf, 0x58, 0xad, 0x24, 0x55, 0x6d, 0x61, 0xa9, 0x36, 0x2b, 0x60, 0x9d,
	0x98, 0x7f, 0x4d, 0x7c, 0x89, 0xeb, 0x6e, 0x27, 0xbb, 0x23, 0x1e, 0x5e, 0xa4, 0xb9, 0xbf, 0x98,
	0x87, 0x37, 0xfe, 0xee, 0xa8, 0xce, 0x2f, 0xc0, 0x66, 0x53, 0xd5, 0x72, 0x8f, 0x1a, 0xf5, 0x61,
	0x5f, 0x4b, 0x1e, 0x63, 0x6b, 0xd7, 0x6a, 0xd7, 0x4f, 0x6c, 0xfd, 0xd7, 0xe6, 0xc9, 0xff, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x6e, 0x61, 0x5c, 0x0f, 0x0b, 0x09, 0x00, 0x00,
}
