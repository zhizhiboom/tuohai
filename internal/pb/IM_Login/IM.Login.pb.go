// Code generated by protoc-gen-go.
// source: tuohai/internal/pb/IM_Login/IM.Login.proto
// DO NOT EDIT!

/*
Package IM_Login is a generated protocol buffer package.

It is generated from these files:
	tuohai/internal/pb/IM_Login/IM.Login.proto

It has these top-level messages:
	IMLoginReq
	IMLoginRes
	IMLogoutReq
	IMLogoutRsp
	IMKickClientReq
	IMKickClientRsp
*/
package IM_Login

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import IM_BaseDefine "tuohai/internal/pb/IM_BaseDefine"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type IMLoginReq struct {
	// cmd id:		0x0103
	UserId        string                     `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Passwd        string                     `protobuf:"bytes,2,opt,name=passwd" json:"passwd,omitempty"`
	OnlineStatus  IM_BaseDefine.UserStatType `protobuf:"varint,3,opt,name=online_status,json=onlineStatus,enum=IM.BaseDefine.UserStatType" json:"online_status,omitempty"`
	ClientType    IM_BaseDefine.ClientType   `protobuf:"varint,4,opt,name=client_type,json=clientType,enum=IM.BaseDefine.ClientType" json:"client_type,omitempty"`
	DeviceId      string                     `protobuf:"bytes,5,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
	ClientVersion string                     `protobuf:"bytes,6,opt,name=client_version,json=clientVersion" json:"client_version,omitempty"`
	Token         string                     `protobuf:"bytes,7,opt,name=token" json:"token,omitempty"`
}

func (m *IMLoginReq) Reset()                    { *m = IMLoginReq{} }
func (m *IMLoginReq) String() string            { return proto.CompactTextString(m) }
func (*IMLoginReq) ProtoMessage()               {}
func (*IMLoginReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type IMLoginRes struct {
	// cmd id:		0x0104
	ServerTime   uint32                     `protobuf:"varint,1,opt,name=server_time,json=serverTime" json:"server_time,omitempty"`
	ErrCode      IM_BaseDefine.ResultType   `protobuf:"varint,2,opt,name=err_code,json=errCode,enum=IM.BaseDefine.ResultType" json:"err_code,omitempty"`
	ErrMsg       string                     `protobuf:"bytes,3,opt,name=err_msg,json=errMsg" json:"err_msg,omitempty"`
	OnlineStatus IM_BaseDefine.UserStatType `protobuf:"varint,4,opt,name=online_status,json=onlineStatus,enum=IM.BaseDefine.UserStatType" json:"online_status,omitempty"`
}

func (m *IMLoginRes) Reset()                    { *m = IMLoginRes{} }
func (m *IMLoginRes) String() string            { return proto.CompactTextString(m) }
func (*IMLoginRes) ProtoMessage()               {}
func (*IMLoginRes) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type IMLogoutReq struct {
}

func (m *IMLogoutReq) Reset()                    { *m = IMLogoutReq{} }
func (m *IMLogoutReq) String() string            { return proto.CompactTextString(m) }
func (*IMLogoutReq) ProtoMessage()               {}
func (*IMLogoutReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type IMLogoutRsp struct {
	// cmd id:		0x0106
	ErrCode uint32 `protobuf:"varint,1,opt,name=err_code,json=errCode" json:"err_code,omitempty"`
}

func (m *IMLogoutRsp) Reset()                    { *m = IMLogoutRsp{} }
func (m *IMLogoutRsp) String() string            { return proto.CompactTextString(m) }
func (*IMLogoutRsp) ProtoMessage()               {}
func (*IMLogoutRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type IMKickClientReq struct {
	// cmd id:		0x010a
	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *IMKickClientReq) Reset()                    { *m = IMKickClientReq{} }
func (m *IMKickClientReq) String() string            { return proto.CompactTextString(m) }
func (*IMKickClientReq) ProtoMessage()               {}
func (*IMKickClientReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type IMKickClientRsp struct {
	// cmd id: 		0x010b
	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ResultCode uint32 `protobuf:"varint,2,opt,name=result_code,json=resultCode" json:"result_code,omitempty"`
	DeviceId   string `protobuf:"bytes,3,opt,name=device_id,json=deviceId" json:"device_id,omitempty"`
}

func (m *IMKickClientRsp) Reset()                    { *m = IMKickClientRsp{} }
func (m *IMKickClientRsp) String() string            { return proto.CompactTextString(m) }
func (*IMKickClientRsp) ProtoMessage()               {}
func (*IMKickClientRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto.RegisterType((*IMLoginReq)(nil), "IM.Login.IMLoginReq")
	proto.RegisterType((*IMLoginRes)(nil), "IM.Login.IMLoginRes")
	proto.RegisterType((*IMLogoutReq)(nil), "IM.Login.IMLogoutReq")
	proto.RegisterType((*IMLogoutRsp)(nil), "IM.Login.IMLogoutRsp")
	proto.RegisterType((*IMKickClientReq)(nil), "IM.Login.IMKickClientReq")
	proto.RegisterType((*IMKickClientRsp)(nil), "IM.Login.IMKickClientRsp")
}

func init() { proto.RegisterFile("tuohai/internal/pb/IM_Login/IM.Login.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 406 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x92, 0xc1, 0xee, 0xd2, 0x40,
	0x10, 0xc6, 0x43, 0xf9, 0xff, 0x0b, 0x0c, 0x16, 0x93, 0x8d, 0xd1, 0x22, 0x07, 0x4d, 0x8d, 0x09,
	0x17, 0x21, 0x51, 0x4f, 0x9e, 0x0c, 0x98, 0x68, 0xa3, 0xbd, 0x14, 0xf4, 0xda, 0x94, 0x76, 0xc5,
	0x0d, 0x65, 0xb7, 0x76, 0xb7, 0x18, 0x1f, 0xc4, 0xd7, 0xf1, 0xd9, 0x9c, 0xce, 0x8a, 0x50, 0x88,
	0x26, 0xde, 0x76, 0xbe, 0x9d, 0xef, 0xdb, 0x99, 0x5f, 0x0b, 0x4f, 0x84, 0x34, 0xbc, 0x92, 0x69,
	0x31, 0x2f, 0x37, 0xf3, 0x30, 0x4a, 0x3e, 0xa8, 0xad, 0x90, 0x78, 0x98, 0xd1, 0x61, 0x56, 0x56,
	0xca, 0x28, 0xd6, 0x3f, 0xd6, 0x0f, 0x9f, 0x5d, 0xb4, 0x2f, 0x52, 0xcd, 0xdf, 0xf0, 0xcf, 0x42,
	0xf2, 0xc6, 0x73, 0xaa, 0xac, 0x31, 0xf8, 0xe1, 0x00, 0x84, 0x11, 0x59, 0x63, 0xfe, 0x95, 0x3d,
	0x80, 0x5e, 0xad, 0x79, 0x95, 0x88, 0xdc, 0xef, 0x3c, 0xee, 0x4c, 0x07, 0xb1, 0xdb, 0x94, 0x61,
	0xce, 0xee, 0x83, 0x5b, 0xa6, 0x5a, 0x7f, 0xcb, 0x7d, 0xc7, 0xea, 0xb6, 0x62, 0xaf, 0xc1, 0x53,
	0xb2, 0xc0, 0xbc, 0x44, 0x9b, 0xd4, 0xd4, 0xda, 0xef, 0xe2, 0xf5, 0xe8, 0xf9, 0x64, 0xd6, 0x7e,
	0xec, 0x23, 0xa6, 0xac, 0xb0, 0x61, 0xfd, 0xbd, 0xe4, 0xf1, 0x1d, 0xeb, 0x58, 0x91, 0x81, 0xbd,
	0x82, 0x61, 0x56, 0x08, 0x2e, 0x4d, 0x62, 0xf0, 0xd2, 0xbf, 0x21, 0xff, 0xf8, 0xc2, 0xbf, 0xa4,
	0x0e, 0x72, 0x43, 0xf6, 0xe7, 0xcc, 0x26, 0x30, 0xc8, 0xf9, 0x41, 0x64, 0xbc, 0x19, 0xf8, 0x96,
	0x06, 0xeb, 0x5b, 0x01, 0x47, 0x7e, 0x0a, 0xa3, 0xdf, 0xc1, 0x07, 0x5e, 0x69, 0xa1, 0xa4, 0xef,
	0x52, 0x87, 0x67, 0xd5, 0x4f, 0x56, 0x64, 0xf7, 0xe0, 0xd6, 0xa8, 0x1d, 0x97, 0x7e, 0x8f, 0x6e,
	0x6d, 0x11, 0xfc, 0xec, 0x9c, 0x71, 0xd1, 0xec, 0x11, 0x0c, 0x71, 0x03, 0xcc, 0x49, 0x8c, 0xd8,
	0x73, 0x62, 0xe3, 0xc5, 0x60, 0xa5, 0x35, 0x2a, 0xec, 0x25, 0xf4, 0x79, 0x55, 0x25, 0x99, 0xca,
	0x39, 0x11, 0xba, 0x5e, 0x01, 0x63, 0xea, 0xc2, 0xae, 0xd0, 0xc3, 0xd6, 0x25, 0x76, 0x36, 0xb8,
	0x1b, 0xd7, 0x5e, 0x6f, 0x89, 0x1b, 0x62, 0xc5, 0x32, 0xd2, 0xdb, 0x6b, 0xac, 0x37, 0xff, 0x89,
	0x35, 0xf0, 0x60, 0x48, 0xf3, 0xab, 0xda, 0xe0, 0x87, 0x0d, 0xa6, 0x67, 0xa5, 0x2e, 0xd9, 0xf8,
	0x6c, 0x5c, 0xbb, 0xcc, 0x71, 0xa6, 0xe0, 0x2d, 0xdc, 0x0d, 0xa3, 0xf7, 0x22, 0xdb, 0x59, 0xe6,
	0xff, 0xfc, 0x2b, 0x5a, 0xfc, 0x9d, 0x36, 0xff, 0xe0, 0xcb, 0x45, 0x10, 0x3e, 0xfb, 0xd7, 0x20,
	0xe4, 0x5b, 0x11, 0x9f, 0x13, 0x41, 0xe4, 0x6b, 0x25, 0x22, 0xd5, 0x7a, 0xa9, 0xdb, 0x7e, 0x69,
	0xe1, 0xbc, 0xeb, 0x6e, 0x5c, 0xfa, 0x9f, 0x5f, 0xfc, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x8a,
	0x65, 0x5b, 0x2f, 0x03, 0x00, 0x00,
}
